services:
  authleticaura_backend:
    image: ${DOCKER_REGISTRY-}authleticaura_backend:0.1
    container_name: AuthleticAura-backend
    build:
      context: ./Backend_AA
      dockerfile: Backend_AA/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80;http://+:443
    ports:
      - "8013:80"
    volumes:
      - uploads:/app/Img
    restart: unless-stopped
  authleticaura_frontend:
    image: ${DOCKER_REGISTRY-}authleticaura_frontend:0.1
    container_name: AuthleticAura-frontend
    build:
      context: ./vite-project
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
   #PostgreSQL
  postgres_db:
    image: postgres:17.0-bookworm
    container_name: AuthleticAura-PostgreSQL
    environment:
        POSTGRES_DB: "AuthleticAuraDB"
        POSTGRES_USER: "DeSa1S13-user"
        POSTGRES_PASSWORD: "root"
    ports:
      - "5432:80"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
  #PgAdmin
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: AuthleticAura-PgAdmin
    environment:
      PGADMIN_DEFAULT_EMAIL: rozanovivan13@gmail.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80" 
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres_db
  #Redis
  redis_cache:
    image: redis:7.4-bookworm
    container_name: AuthleticAura-Redis
    environment:
      - REDIS_PASSWORD=root
      - REDIS_USER=admin
      - REDIS_USER_PASSWORD=admin
    ports:
      - "6380:6379"
    volumes:
      - ./redis_cache:/data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "root", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
volumes:
  postgres_data:
  pgadmin_data:
  # rabbitmq_broker:  
  redis_cache:
  uploads:  
  